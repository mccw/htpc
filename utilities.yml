---
version: '3.7'
services:

  # ddclient - keep ddns updated
  ddclient:
    image: linuxserver/ddclient
    init: true
    hostname: ddclient
    container_name: ddclient
    restart: unless-stopped
    volumes:
      - ${DOCKERDIR}/docker/ddclient:/config
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

  # duplicati - store backups online with strong encryption
  duplicati:
    image: linuxserver/duplicati
    init: true
    hostname: duplicati
    container_name: duplicati
    restart: unless-stopped
    volumes:
      - ${DOCKERDIR}/docker/duplicati:/config
      - ${DOCKERDIR}/docker/backups:/backups
      - ${DOCKERDIR}/docker:/source
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik
    labels:
      - "traefik.http.routers.backup.rule=Host(`backup.${HOSTNAME}`)"
      - "traefik.http.routers.backup.tls=true"
      - "traefik.http.routers.backup.tls.certresolver=le"
      - "traefik.http.routers.backup.entrypoints=websecure"
      - "traefik.http.services.backup.loadbalancer.server.port=8200"

  # Heimdall - Application dashboard
  heimdall:
    image: linuxserver/heimdall
    init: true
    hostname: heimdall
    container_name: heimdall
    restart: unless-stopped
    volumes:
      - ${DOCKERDIR}/docker/heimdall:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${HOSTNAME}`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=le"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=80"

  # PiHole - network ad blocker
  pihole:
    image: pihole/pihole:latest
    init: true
    hostname: pihole
    container_name: pihole
    domainname: docker
    restart: unless-stopped
    volumes:
      - ${DOCKERDIR}/docker/pihole:/etc/pihole
      - ${DOCKERDIR}/docker/pihole/pihole.log:/var/log/pihole.log
      - ${DOCKERDIR}/docker/pihole/dnsmasq.d:/etc/dnsmasq.d
    environment:
      - PROXY_LOCATION=pihole
      - VIRTUAL_HOST=pihole.${HOSTNAME}
      - VIRTUAL_PORT=80
      - TZ=${TZ}
      - WEBPASSWORD=${HTTP_PASSWORD}
      - DNS1=127.0.0.1
      - DNS2=1.1.1.1
    networks:
      - traefik
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '8043:80/tcp'
    labels:
      - "traefik.http.routers.pihole.rule=Host(`pihole.${HOSTNAME}`)"
      - "traefik.http.routers.pihole.tls=true"
      - "traefik.http.routers.pihole.tls.certresolver=le"
      - "traefik.http.routers.pihole.entrypoints=websecure"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"

  # Portainer - WebUI for Containers
  portainer:
    image: portainer/portainer
    init: true
    hostname: portainer
    container_name: portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKERDIR}/docker/portainer/data:/data
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik
    labels:
      - "traefik.http.routers.portainer.rule=Host(`portainer.${HOSTNAME}`)"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=le"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  # Traefik v2 - reverse proxy for containers
  traefik:
    image: traefik:latest
    init: true
    hostname: traefik
    container_name: traefik
    restart: unless-stopped
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --api.dashboard=true
      - --certificatesresolvers.le.acme.email=mccolloughs@gmail.com
      - --certificatesresolvers.le.acme.storage=/etc/traefik/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/etc/traefik
      - shared:/shared
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
    networks:
      - traefik
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.${HOSTNAME}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.auth.basicauth.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"

  # Watchtower - docker image updater
  watchtower:
    image: containrrr/watchtower
    init: true
    hostname: watchtower
    container_name: watchtower
    restart: unless-stopped
    command: --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKERDIR}/docker/watchtower/data:/data
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

networks:
  traefik:
    external:
      name: traefik

volumes:
  letsencrypt:
  shared:
    external: true

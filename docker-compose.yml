<<<<<<< HEAD
version: '3'
=======
version: '3.7'
>>>>>>> a6c0330922b6288dffe65226621410cf92bc0209
services:

#MariaDb
  # db:
  #   image: mariadb
  #   hostname: mariadb
  #   container_name: mariadb
  #   command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
  #   restart: always
  #   volumes:
  #     - db:/var/lib/mysql
  #   environment:
  #     - TZ=${TZ}
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - MYSQL_ROOT_PASSWORD=mariadb
  #     - MYSQL_PASSWORD=mariadb
  #     - MYSQL_DATABASE=nextcloud
  #     - MYSQL_USER=nextcloud
  #   networks:
  #     - nextcloud_network
  #     - default

#NextCloud
  # nextcloud:
  #   image: nextcloud
  #   hostname: nextcloud
  #   container_name: nextcloud
  #   depends_on:
  #     - db
  #   restart: always
  #   volumes:
  #     - ${DOCKERDIR}/docker/nextcloud:/config
  #     - nextcloud:/var/www/html
  #     - shared:/shared
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   networks:
  #     - nextcloud_network
  #     - traefik_proxy
  #     - default
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.backend=cloud"
  #     - "traefik.frontend.rule=Host:cloud.${HOSTNAME}"
  #     - "traefik.port=80"
  #     - "traefik.docker.network=traefik_proxy"
  #     - "traefik.frontend.headers.SSLRedirect=true"
  #     - "traefik.frontend.headers.STSSeconds=315360000"
  #     - "traefik.frontend.headers.browserXSSFilter=true"
  #     - "traefik.frontend.headers.contentTypeNosniff=true"
  #     - "traefik.frontend.headers.forceSTSHeader=true"
  #     - "traefik.frontend.headers.SSLHost=example.com"
  #     - "traefik.frontend.headers.STSIncludeSubdomains=true"
  #     - "traefik.frontend.headers.STSPreload=true"
  #     - "traefik.frontend.headers.frameDeny=false"

#NZBHydra2 - Indexer 
  nzbhydra2:
    image: linuxserver/hydra2:latest
    hostname: nzbhydra
    container_name: nzbhydra
    restart: always
    volumes:
      - ${DOCKERDIR}/docker/nzbhydra:/config
      - ${DOCKERDIR}/downloads:/downloads
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nzbhydra"
      - "traefik.frontend.rule=Host:nzbhydra.${HOSTNAME}"
      - "traefik.port=5076"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"

#Ombi - Show Requestor      
  ombi:
    image: linuxserver/ombi:latest
    hostname: ombi
    container_name: ombi
    restart: always
    volumes: 
      - ${DOCKERDIR}/docker/ombi:/config
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=ombi"
      - "traefik.frontend.rule=Host:ombi.${HOSTNAME}"
      - "traefik.port=3579"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${HOSTNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"      

#Organizer - Unified HTPC/Home Server Web Interface
  organizr:
    image: organizrtools/organizr-v2
    container_name: organizr
    hostname: organizr
    restart: always
    volumes:
      - ${DOCKERDIR}/docker/organizr:/config
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=organizr"
      - "traefik.frontend.rule=Host:organizr.${HOSTNAME}"  
      - "traefik.port=80"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${HOSTNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

#Radarr – Movie Download and Management
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    restart: always
    volumes:
      - ${DOCKERDIR}/docker/radarr:/config
      - ${DOCKERDIR}/downloads:/downloads
      - ${DATADIR}/My Videos:/movies
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr"
      - "traefik.frontend.rule=Host:radarr.${HOSTNAME}"
      - "traefik.port=7878"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${HOSTNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"      

#SABnzbd - 
  sabnzbd:
    image: "linuxserver/sabnzbd"
    container_name: "sabnzbd"
    volumes:
      - ${DOCKERDIR}/docker/sabnzbd:/config
      - ${DOCKERDIR}/downloads:/downloads
      - shared:/shared
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sabnzbd"
      - "traefik.frontend.rule=Host:sabnzbd.${HOSTNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${HOSTNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"      

#Sonarr – TV Show Download and Management
  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    hostname: sonarr
    restart: always
    volumes:
      - ${DOCKERDIR}/docker/sonarr:/config
      - ${DOCKERDIR}/downloads:/downloads
      - ${DATADIR}/My TV:/tv
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sonarr"
      - "traefik.frontend.rule=Host:sonarr.${HOSTNAME}"
      - "traefik.port=8989"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${HOSTNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"      

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
#  nextcloud_network:  

volumes:
  letsencrypt:
  shared:

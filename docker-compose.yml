version: '3.7'
services:

#ddclient - keep ddns updated
  ddclient:
    image: linuxserver/ddclient
    hostname: ddclient
    container_name: ddclient
    restart: unless-stopped  
    volumes:
      - ${DOCKERDIR}/docker/ddclient:/config
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}


#Lidarr – TV Show Download and Management
  lidarr:
    image: hotio/lidarr
    container_name: lidarr
    hostname: lidarr
    restart: always
    volumes:
      - ${DOCKERDIR}/docker/lidarr:/config
      - ${DOCKERDIR}/docker/downloads:/downloads
      - ${DATADIR}/My Music:/music
      - ${DOCKERDIR}/docker/downloads/completed:/data/completed/music
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - default
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=lidarr"
      - "traefik.frontend.rule=Host:lidarr.${HOSTNAME}"
      - "traefik.port=8686"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=scottmccollough.net"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"      

#NZBGet - Downloader      
  nzbget:
    image: linuxserver/nzbget:latest
    container_name: nzbget
    hostname: nzbget
    restart: always
    volumes: 
      - ${DOCKERDIR}/docker/nzbget:/config
      - ${DOCKERDIR}/docker/downloads:/downloads
      - ${DOCKERDIR}/docker/downloads/incompleted:/incompleted-downloads
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - default
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nzbget"
      - "traefik.frontend.rule=Host:nzbget.${HOSTNAME}"
      - "traefik.port=6789"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"

#NZBHydra2 - Indexer 
  nzbhydra2:
    image: hotio/nzbhydra2:latest
    container_name: nzbhydra
    hostname: nzbhydra
    restart: always
    volumes:
      - ${DOCKERDIR}/docker/nzbhydra:/config
      - ${DOCKERDIR}/docker/downloads:/downloads
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - default
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nzbhydra"
      - "traefik.frontend.rule=Host:nzbhydra.${HOSTNAME}"
      - "traefik.port=5076"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"

#Ombi - Show Requestor      
  ombi:
    image: linuxserver/ombi:latest
    hostname: ombi
    container_name: ombi
    restart: always
    volumes: 
      - ${DOCKERDIR}/docker/ombi:/config
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - default
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=ombi"
      - "traefik.frontend.rule=Host:ombi.${HOSTNAME}"
      - "traefik.port=3579"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=scottmccollough.net"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"      

#Organizer - Unified HTPC/Home Server Web Interface
  organizr:
    image: linuxserver/organizr:latest
    container_name: organizr
    hostname: organizr
    restart: always
    volumes:
      - ${DOCKERDIR}/docker/organizr:/config
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=organizr"
      - "traefik.frontend.rule=Host:organizr.${HOSTNAME}"  
      - "traefik.port=80"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=scottmccollough.net"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

#Ouroboros - keep containers updated      
  ouroboros:
    image: pyouroboros/ouroboros
    container_name: ouroboros
    hostname: ouroboros
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKERDIR}/docker/ouroboros/data:/data
      - shared:/shared
    environment:
      - CLEANUP=true
      - INTERVAL=300
      - LOG_LEVEL=info
      - SELF_UPDATE=true
      - IGNORE=mongo influxdb postgres mariadb
      - TZ=${TZ}

#Portainer - WebUI for Containers
  portainer:
    image: portainer/portainer
    container_name: portainer
    hostname: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKERDIR}/docker/portainer/data:/data
      - shared:/shared
    environment:
      - TZ=${TZ}
    networks:
      - default
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${HOSTNAME}"  
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=scottmccollough.net"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"      

#Radarr – Movie Download and Management
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    restart: always
    volumes:
      - ${DOCKERDIR}/docker/radarr:/config
      - ${DOCKERDIR}/docker/downloads:/downloads
      - ${DATADIR}/My Videos:/movies
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - default
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr"
      - "traefik.frontend.rule=Host:radarr.${HOSTNAME}"
      - "traefik.port=7878"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=scottmccollough.net"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"      

#Sonarr – TV Show Download and Management
  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    hostname: sonarr
    restart: always
    volumes:
      - ${DOCKERDIR}/docker/sonarr:/config
      - ${DOCKERDIR}/docker/downloads:/downloads
      - ${DATADIR}/My TV:/tv
      - shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - default
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sonarr"
      - "traefik.frontend.rule=Host:sonarr.${HOSTNAME}"
      - "traefik.port=8989"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=scottmccollough.net"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"      

#Traefik - reverse proxy for containers      
  traefik:
    hostname: traefik
    image: traefik:v1.7.18-alpine
    container_name: traefik
    restart: always
    domainname: ${HOSTNAME}
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${HOSTNAME}"  
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=scottmccollough.net"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"
      - "traefik.frontend.auth.basic.users=admin:$$apr1$$zRlu8edd$$M4hCVBfVQLhY2yfG0fgQB/"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/etc/traefik
      - shared:/shared

#Vault = secret storage      
  vault:
    image: vault
    container_name: vault
    ports:
      - "8200:8200"
    restart: always
    volumes:
      - ${DOCKERDIR}/docker/vault/config:/vault/config
      - ${DOCKERDIR}/docker/vault/logs:/vault/logs
      - ${DOCKERDIR}/docker/vault/file:/vault/file/
      - shared:/shared

    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.json

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge      

volumes:
  letsencrypt:
  shared:
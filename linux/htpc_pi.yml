---
version: '3.8'
services:

  # Lidarr - Music Manager
  lidarr:
    image: linuxserver/lidarr
    hostname: lidarr
    container_name: lidarr
    restart: unless-stopped
    volumes:
      - ${USBDIR}/docker/lidarr:/config
      - ${DDIR}/music:/music
      - ${USBDIR}/downloads:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik
    labels:
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.${HOSTNAME}`)"
      - "traefik.http.routers.lidarr.tls=true"
      - "traefik.http.routers.lidarr.tls.certresolver=le"
      - "traefik.http.routers.lidarr.entrypoints=websecure"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"

  # Plex - media server
  plex:
    image: lscr.io/linuxserver/plex:latest
    hostname: plex
    container_name: plex
    restart: unless-stopped
    network_mode: host
    volumes:
      - ${USBDIR}/docker/plex:/config
      - ${USBDIR}/media/tv:/tv
      - ${USBDIR}/media/movies:/movies
      - ${DDIR}/music:/music
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM=claim-xoUFjnqC381786pVB18S

  # Prowlarr - Index Manager
  prowlarr:
    image: linuxserver/prowlarr
    hostname: prowlarr
    container_name: prowlarr
    restart: unless-stopped
    volumes:
      - ${USBDIR}/docker/prowlarr:/config
      - ${USBDIR}/downloads:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik
    labels:
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${HOSTNAME}`)"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.routers.prowlarr.tls.certresolver=le"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

  # Radarr – Movie Download and Management
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    hostname: radarr
    restart: unless-stopped
    volumes:
      - ${USBDIR}/docker/radarr:/config
      - ${USBDIR}/downloads:/downloads
      - ${DATADIR}/movies:/movies
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik
    labels:
      - "traefik.http.routers.radarr.rule=Host(`radarr.${HOSTNAME}`)"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=le"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  # SABnzbd - Binary News Reader
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    hostname: sabnzbd
    restart: unless-stopped
    volumes:
      - ${USBDIR}/docker/sabnzbd:/config
      - ${USBDIR}/downloads:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      traefik:
        ipv4_address: 172.18.0.10
    labels:
      - "traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${HOSTNAME}`)"
      - "traefik.http.routers.sabnzbd.tls=true"
      - "traefik.http.routers.sabnzbd.tls.certresolver=le"
      - "traefik.http.routers.sabnzbd.entrypoints=websecure"
      - "traefik.http.services.sabnzbd.loadbalancer.server.port=8080"

  # Sonarr – TV Show Download and Management
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    hostname: sonarr
    restart: unless-stopped
    volumes:
      - ${USBDIR}/docker/sonarr:/config
      - ${USBDIR}/downloads:/downloads
      - ${DATADIR}/tv:/tv
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik
    labels:
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${HOSTNAME}`)"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=le"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

networks:
  traefik:
    name: traefik
    ipam:
      config:
        - subnet: 172.18.0.0/16
...

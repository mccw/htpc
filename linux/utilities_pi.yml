---
version: '3.7'
services:

  # ddclient - keep ddns updated
  ddclient:
    image: linuxserver/ddclient
    init: true
    hostname: ddclient
    container_name: ddclient
    restart: unless-stopped
    volumes:
      - ${USBDIR}/docker/ddclient:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - utilities
    labels:
      - "traefik.enable=false"

  # Heimdall - Application dashboard
  heimdall:
    image: linuxserver/heimdall
    init: true
    hostname: heimdall
    container_name: heimdall
    restart: unless-stopped
    volumes:
      - ${USBDIR}/docker/heimdall:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${HOSTNAME}`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=le"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=80"

  # NextCloud
  nextcloud:
    image: linuxserver/nextcloud
    init: true
    hostname: nextcloud
    container_name: nextcloud
    restart: always
    volumes:
      - ${USBDIR}/docker/nextcloud/config:/config
      - ${USBDIR}/docker/nextcloud/data:/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - NEXTCLOUD_TRUSTED_DOMAINS=192.168.1.250 nextcloud.scottmccollough.net
      - OVERWRITEPROTOCOL=https
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      - mariadb
      - redis
    networks:
      - traefik
    labels:
      - "traefik.tcp.routers.nextcloud-tcp.entrypoints=websecure"
      - "traefik.tcp.routers.nextcloud-tcp.rule=HostSNI(`nextcloud.${HOSTNAME}`)"
      - "traefik.tcp.routers.nextcloud-tcp.tls=true"
      - "traefik.tcp.routers.nextcloud-tcp.tls.certresolver=le"
      - "traefik.tcp.routers.nextcloud-tcp.tls.passthrough=true"
      - "traefik.tcp.routers.nextcloud-tcp.service=nextcloud"
      - "traefik.tcp.services.nextcloud.loadbalancer.server.port=443"      

  # mariaDB      
  mariadb:
    image: linuxserver/mariadb
    init: true
    hostname: mariadb
    container_name: mariadb
    restart: always
    volumes:
      - ${USBDIR}/docker/mariadb/config:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    networks:
      - traefik
    labels:
      - "traefik.enable=false"

  # Ombi
  ombi:
    image: linuxserver/ombi
    init: true
    hostname: ombi
    container_name: ombi
    restart: unless-stopped
    volumes:
      - ${USBDIR}/docker/ombi/config:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik
    labels:
      - "traefik.http.routers.ombi.rule=Host(`ombi.${HOSTNAME}`)"
      - "traefik.http.routers.ombi.tls=true"
      - "traefik.http.routers.ombi.tls.certresolver=le"
      - "traefik.http.routers.ombi.entrypoints=websecure"
      - "traefik.http.services.ombi.loadbalancer.server.port=3579"

  # Portainer - WebUI for Containers
  portainer:
    image: portainer/portainer-ce
    init: true
    hostname: portainer
    container_name: portainer
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USBDIR}/docker/portainer/data:/data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik
    labels:
      - "traefik.http.routers.portainer.rule=Host(`portainer.${HOSTNAME}`)"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=le"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  # Redis
  redis:
    image: redis:alpine
    init: true
    hostname: redis
    container_name: redis
    restart: always
    volumes:
      - ${USBDIR}/docker/redis/data:/data
    networks:
      - traefik
    labels:
      - "traefik.enable=false"

  # Traefik v2 - reverse proxy for containers
  traefik:
    image: traefik:latest
    init: true
    hostname: traefik
    container_name: traefik
    restart: always
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.file.filename=/etc/traefik/files.yml
      - --providers.file.watch=true
      - --api.dashboard=true
      - --certificatesresolvers.le.acme.email=${EMAIL}
      - --certificatesresolvers.le.acme.storage=/etc/traefik/acme.json
      - --certificatesresolvers.le.acme.dnschallenge=true
      - --certificatesresolvers.le.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.le.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.le.acme.dnschallenge.resolvers[0]=1.1.1.1:53
      - --certificatesresolvers.le.acme.dnschallenge.resolvers[1]=8.8.8.8:53
      - --log.level=ERROR
      - --log.filePath=/etc/traefik/traefik.log
      - --serversTransport.insecureSkipVerify=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USBDIR}/docker/traefik:/etc/traefik
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
    networks:
      - traefik
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.${HOSTNAME}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

networks:
  traefik:
    name: traefik
    ipam:
      config:
        - subnet: 172.18.0.0/16
  utilities:
    name: utilities
    ipam:
      config:
        - subnet: 172.19.0.0/16
